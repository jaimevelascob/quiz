{"remainingRequest":"/home/hab35/Hackabos/proyectoHack/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hab35/Hackabos/proyectoHack/front/src/views/Challenges.vue?vue&type=style&index=0&id=67788a2a&scoped=true&lang=css&","dependencies":[{"path":"/home/hab35/Hackabos/proyectoHack/front/src/views/Challenges.vue","mtime":1592988864643},{"path":"/home/hab35/Hackabos/proyectoHack/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab35/Hackabos/proyectoHack/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hab35/Hackabos/proyectoHack/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hab35/Hackabos/proyectoHack/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab35/Hackabos/proyectoHack/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpidXR0b24gewogIHBhZGRpbmc6IDFyZW07CiAgd2lkdGg6IDEwJTsKfQo="},{"version":3,"sources":["Challenges.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA","file":"Challenges.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"capauno\">\n    <!-- BUSQUEDA -->\n    <div class=\"searchProduct\">\n      <select v-model=\"filter\">\n        <option disabled value>Filtrado por...</option>\n        <option value=\"id\">id</option>\n        <option value=\"title\">Nombre</option>\n      </select>\n      <input\n        v-model.trim=\"search\"\n        id=\"search\"\n        name=\"bySearch\"\n        type=\"search\"\n        placeholder=\"Búsqueda...\"\n        v-show=\"!dateInput\"\n      />\n      <input\n        v-model.trim=\"search\"\n        id=\"search\"\n        name=\"bySearch\"\n        type=\"date\"\n        placeholder=\"Write...\"\n        v-show=\"dateInput\"\n      />\n      <button @click=\"getChallenge()\">Buscar</button>\n      <button @click=\"clearInput()\">Clean</button>\n    </div>\n\n    <!--  SIMBOLO DE CARGA  -->\n    <div v-show=\"loading\" class=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n    <!-- COMPONENTE MEETINGS -->\n    <challengelist :challenges=\"challenges\"></challengelist>\n    <!-- NO RESULTS -->\n    <p v-show=\"noResults\" style=\"color:red\">No results</p>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"; // Importando AXIOS\n//IMPORTANDO meetingS\nimport challengelist from \"@/components/ChallengeList.vue\";\nexport default {\n  name: \"Challenges\",\n  components: { challengelist },\n  props: [\"id\"],\n  data() {\n    return {\n      challenges: [],\n      loading: true,\n      search: \"\",\n      filter: \"\",\n      dateInput: false,\n      noResults: false\n    };\n  },\n  methods: {\n    getChallenge() {\n      let self = this;\n      axios\n        .get(\n          `http://localhost:3000/challengelist?search=${self.search}&filter=${self.filter}`\n        )\n        .then(function(response) {\n          //TIEMPO DE CARGA\n          setTimeout(function() {\n            self.loading = false;\n            self.challenges = response.data.data;\n          }, 1000);\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    },\n    clearInput() {\n      (this.search = \"\"), (this.filter = \"\");\n      this.getChallenge();\n    }\n  },\n  watch: {\n    // cada vez que la pregunta cambie, esta función será ejecutada\n    filter: function() {\n      if (this.filter === \"date\") {\n        this.dateInput = true;\n      } else {\n        this.dateInput = false;\n      }\n    },\n    challenges: function() {\n      if (this.challenges.length < 1) {\n        this.noResults = true;\n      } else {\n        this.noResults = false;\n      }\n    }\n  },\n  created() {\n    this.getChallenge();\n  }\n};\n</script>\n\n<style scoped>\nbutton {\n  padding: 1rem;\n  width: 10%;\n}\n</style>"]}]}